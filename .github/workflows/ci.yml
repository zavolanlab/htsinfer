name: ci

on: [push, pull_request]

jobs:

  static-code-analysis:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:

      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Setup miniconda & htsinfer root env
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          environment-file: environment.yml
          activate-environment: htsinfer
          auto-activate-base: false

      - name: Update htsinfer env with dev. packages
        run: conda env update --file environment-dev.yml

      - name: Display all miniconda & env info
        run: |
          conda info -a
          conda list

      - name: Run Flake8
        run: flake8

      - name: Run Pylint
        run: pylint --rcfile pylint.cfg setup.py htsinfer/

      - name: Run Mypy
        run: mypy htsinfer

  unit-testing:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}

    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.7', '3.8', '3.9' ]

    name: unit-testing-Python-${{ matrix.python-version }}

    steps:

      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Setup miniconda & htsinfer root env
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python-version }}
          auto-update-conda: true
          environment-file: environment.yml
          activate-environment: htsinfer
          auto-activate-base: false

      - name: Update htsinfer env with dev. packages
        run: conda env update --file environment-dev.yml

      - name: Display all miniconda & env info
        run: |
          conda info -a
          conda list

      - name: Test code coverage
        run: |
          coverage run --source htsinfer -m pytest
          coverage xml

      - name: Submit Report to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          fail_ci_if_error: true
          verbose: true

  integration-testing:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}

    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.7', '3.8', '3.9' ]

    name: integration-testing-Python-${{ matrix.python-version }}

    steps:

      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Setup miniconda & htsinfer root env
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python-version }}
          auto-update-conda: true
          environment-file: environment.yml
          activate-environment: htsinfer
          auto-activate-base: false

      - name: Update htsinfer env with dev. packages
        run: conda env update --file environment-dev.yml

      - name: Display all miniconda & env info
        run: |
          conda info -a
          conda list

      - name: Run integration test
        run: htsinfer --help

      - name: Cleanup
        run: |
          htsinfer --cleanup-regime=KEEP_NONE --records=3 tests/files/single.fastq
          htsinfer --cleanup-regime=KEEP_NONE tests/files/{first,second}_mate.fastq

#  semantic-release:
#
#    needs:
#      - static-code-analysis
#      - unit-testing
#      - integration-testing
#
#    runs-on: ubuntu-latest
#
#    defaults:
#      run:
#        shell: bash -l {0}
#    
#    steps:
#
#      - name: Checkout the repository
#        uses: actions/checkout@v3
#        with:
#          fetch-depth: '0'
#
#      - name: Setup miniconda & htsinfer root env
#        uses: conda-incubator/setup-miniconda@v2
#        with:
#          auto-update-conda: true
#          environment-file: environment.yml
#          activate-environment: htsinfer
#          auto-activate-base: false
#
#      - name: Update htsinfer env with dev. packages
#        run: conda env update --file environment-dev.yml
#
#      - name: Display all miniconda & env info
#        run: |
#          conda info -a
#          conda list
#
#      - name: Publish the package (DEBUG mode)
#        run: |
#          git config --global user.name "semantic-release (via GH Actions)"
#          git config --global user.email "semantic-release@actions"
#          semantic-release publish -v DEBUG
